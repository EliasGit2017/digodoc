[project]
drom-version = "0.1"

[project]
authors = ["Fabrice Le Fessant <fabrice.le_fessant@origin-labs.com>"]
ci-systems = ["ubuntu-latest", "macos-latest", "windows-latest"]
copyright = "OCamlPro SAS & Origin Labs SAS"
edition = "4.10.0"
github-organization = "ocamlpro"
license = "LGPL2"
min-edition = "4.10.0"
name = "digodoc"
synopsis = "digodoc, opam switch mapper and documentation generator"
version = "0.1.0"

# keys that you could also define:
# odoc-target = "...odoc-target..."
# sphinx-target = "...sphinx-target..."
# archive = "...archive..."
# dev-repo = "...dev-repo..."
# bug-reports = "...bug-reports..."
# doc-api = "...doc-api..."
# doc-gen = "...doc-gen..."
# homepage = "...homepage..."

[project]
description = """\n
The Digodoc library scans opam switches and builds maps of them. It is used to build documentation websites, such as https://docs.ocaml.pro
"""

[project]
skip = "src/digodoc/main.ml src/digodoc_lib/main.ml src/ez_html/main.ml .github/workflows/doc-deploy.yml"

# project-wide library dependencies (not for package-specific deps)
[dependencies]

# project-wide tools dependencies (not for package-specific deps)
[tools.ocamlformat]
for-test = true
[tools.odoc]
for-doc = true
[tools.ppx_expect]
for-test = true
[tools.ppx_inline_test]
for-test = true

[project]

# dirs to skip while scanning for dune files
skip-dirs = []

# dirs to scan for share/ folders (with package names)
share-dirs = ["share"]

# build profile to use by default
# build-profile = ...

# Profile options for this project
#    [profile]
#    dev = { ocaml-flags = "-w +a-4-40-41-42-44" }
#    release = { ocaml-flags = "-w -a" }
[profile]
# ...

# project-wide fields (depends on project skeleton)
[fields]
makefile-trailer="""
test-html:
\tDIGODOC_CONFIG=$$(pwd)/config ./digodoc --test
"""
dot-gitignore-trailer="""
/_digodoc
/examples
"""

[[package]]
dir = "src/digodoc"
# edit 'src/digodoc/package.toml' for package-specific options

[[package]]
dir = "src/digodoc_lib"
# edit 'src/digodoc_lib/package.toml' for package-specific options

[[package]]
dir = "src/meta_file"
# edit 'src/meta_file/package.toml' for package-specific options

[[package]]
dir = "src/ez_html"
# edit 'src/ez_html/package.toml' for package-specific options

[[package]]
dir = "src/htmlize"
# edit 'src/htmlize/package.toml' for package-specific options

